@model irreplaceable.Models.Orders

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


@section scripts {
    <script src="@Url.Content("~/Scripts/datepicker.js")"></script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.rowid)

    <div class="form-group">
        @Html.LabelFor(model => model.order_no, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.order_no, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.order_no, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.order_date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.order_date, new { htmlAttributes = new { @class = "form-control  datepicker", placeholder = @DateTime.Now.ToString("yyyy-MM-dd") } })
            @Html.ValidationMessageFor(model => model.order_date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.order_status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.order_status, Model.GetOrderStatusList, new { @class = "form-control " })
            @Html.ValidationMessageFor(model => model.order_status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.user_no, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.user_no, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.user_no, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.payment_no, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.payment_no, Model.GetPaymentNoList, new { @class = "form-control " })
            @Html.ValidationMessageFor(model => model.payment_no, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.shipping_no, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.shipping_no, Model.GetShippingNoList, new { @class = "form-control " })
            @Html.ValidationMessageFor(model => model.shipping_no, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.receive_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.receive_name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.receive_name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.receive_phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.receive_phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.receive_phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.receive_email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.receive_email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.receive_email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.receive_address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.receive_address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.receive_address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.amounts, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.amounts, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.amounts, "", new { @class = "text-danger" })
        </div>
    </div>
    @Html.HiddenFor(model => model.amounts)


    <div class="form-group">
        @Html.LabelFor(model => model.taxs, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.taxs, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.taxs, "", new { @class = "text-danger" })
        </div>
    </div>
    @Html.HiddenFor(model => model.taxs)
    @*<div class="form-group">
            @Html.LabelFor(model => model.totals, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.totals, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.totals, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.remark, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.remark, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.remark, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-12">
            <input type="submit" value="存檔" class="btn btn-primary" />
            @Html.ActionLink("返回列表", "Index", "Orders", new { Area = "" }, new { @class = "btn btn-success" })
        </div>
    </div>
</div>
}

